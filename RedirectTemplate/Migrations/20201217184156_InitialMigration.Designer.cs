// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedirectTemplate.Data.Context;

namespace RedirectTemplate.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20201217184156_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RedirectTemplate.Data.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(8) CHARACTER SET utf8mb4")
                        .HasMaxLength(8);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "B",
                            Description = "Bestbrake"
                        },
                        new
                        {
                            Id = 2,
                            Code = "B",
                            Description = "Controil"
                        },
                        new
                        {
                            Id = 3,
                            Code = "D",
                            Description = "Durbloc"
                        },
                        new
                        {
                            Id = 4,
                            Code = "E",
                            Description = "Ferodo"
                        },
                        new
                        {
                            Id = 5,
                            Code = "F",
                            Description = "Fras-le"
                        },
                        new
                        {
                            Id = 6,
                            Code = "J",
                            Description = "Fras-le"
                        },
                        new
                        {
                            Id = 7,
                            Code = "L",
                            Description = "Lonaflex"
                        },
                        new
                        {
                            Id = 8,
                            Code = "M",
                            Description = "Midland Friction"
                        },
                        new
                        {
                            Id = 9,
                            Code = "R",
                            Description = "Randon"
                        },
                        new
                        {
                            Id = 10,
                            Code = "S",
                            Description = "Stop"
                        },
                        new
                        {
                            Id = 11,
                            Code = "T",
                            Description = "StradaR"
                        },
                        new
                        {
                            Id = 12,
                            Code = "V",
                            Description = "Randon Veículos"
                        },
                        new
                        {
                            Id = 13,
                            Code = "X",
                            Description = "Fremax"
                        });
                });

            modelBuilder.Entity("RedirectTemplate.Data.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alpha_2Code")
                        .IsRequired()
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("Alpha_3Code")
                        .IsRequired()
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<float>("Latitude")
                        .HasColumnType("float");

                    b.Property<float>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("NumericCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alpha_2Code = "AF",
                            Alpha_3Code = "AFG",
                            Latitude = 33f,
                            Longitude = 65f,
                            Name = "Afghanistan",
                            NumericCode = 4
                        },
                        new
                        {
                            Id = 2,
                            Alpha_2Code = "AL",
                            Alpha_3Code = "ALB",
                            Latitude = 41f,
                            Longitude = 20f,
                            Name = "Albania",
                            NumericCode = 8
                        },
                        new
                        {
                            Id = 3,
                            Alpha_2Code = "BR",
                            Alpha_3Code = "BRA",
                            Latitude = -10f,
                            Longitude = -55f,
                            Name = "Brazil",
                            NumericCode = 76
                        });
                });

            modelBuilder.Entity("RedirectTemplate.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.Property<string>("ComercialName")
                        .IsRequired()
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.Property<int>("Company")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeSync")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SapClientAlpha_2Code")
                        .IsRequired()
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("SapIdClient")
                        .IsRequired()
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "F",
                            ComercialName = "PD/60",
                            Company = 2010,
                            DateTimeSync = new DateTime(2020, 12, 17, 15, 41, 55, 503, DateTimeKind.Local).AddTicks(6395),
                            SapClientAlpha_2Code = "BR",
                            SapIdClient = "1000003450",
                            Serie = "ABCDE123456789ABC12"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "F",
                            ComercialName = "P-60",
                            Company = 2010,
                            DateTimeSync = new DateTime(2020, 12, 17, 15, 41, 55, 505, DateTimeKind.Local).AddTicks(3572),
                            SapClientAlpha_2Code = "BR",
                            SapIdClient = "1000049110",
                            Serie = "ABCDE123456789ABC13"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "F",
                            ComercialName = "CA/33",
                            Company = 2010,
                            DateTimeSync = new DateTime(2020, 12, 17, 15, 41, 55, 505, DateTimeKind.Local).AddTicks(3638),
                            SapClientAlpha_2Code = "BR",
                            SapIdClient = "1000018473",
                            Serie = "ABCDE123456789ABC14"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "X",
                            ComercialName = "BD0001",
                            Company = 2010,
                            DateTimeSync = new DateTime(2020, 12, 17, 15, 41, 55, 505, DateTimeKind.Local).AddTicks(3642),
                            SapClientAlpha_2Code = "BR",
                            SapIdClient = "1000031413",
                            Serie = "ABCDE123456789ABC15"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "C",
                            ComercialName = "C-2000",
                            Company = 2010,
                            DateTimeSync = new DateTime(2020, 12, 17, 15, 41, 55, 505, DateTimeKind.Local).AddTicks(3646),
                            SapClientAlpha_2Code = "BR",
                            SapIdClient = "1000031413",
                            Serie = "ABCDE123456789ABC16"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
